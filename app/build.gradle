plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
}

android {
    compileSdk 32

    defaultConfig {

        applicationId "com.qhy040404.libraryonetap"
        minSdk 29
        targetSdk 32
        versionCode 512
        versionName "2.7.3-Pre"

        project.archivesBaseName = "Library-One-Tap_v$versionName"
        manifestPlaceholders = [CHANNEL: getBuildType(), BUILD_TIME: getBuildTime(), BUILD_HOST: getBuildHost(), COMMIT: getGitCommitHash()]

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        viewBinding true
    }
}

dependencies {
    implementation 'androidx.core:core-ktx:1.8.0'
    implementation 'androidx.appcompat:appcompat:1.4.2'
    implementation 'com.google.android.material:material:1.6.1'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    implementation 'androidx.preference:preference:1.2.0'
    implementation 'androidx.navigation:navigation-fragment-ktx:2.4.2'
    implementation 'androidx.navigation:navigation-ui-ktx:2.4.2'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
    implementation("com.squareup.okhttp3:okhttp:4.9.3")
    implementation("com.google.code.gson:gson:2.9.0")
    implementation("dev.rikka.rikkax.preference:simplemenu-preference:1.0.3")
    implementation('com.tencent.bugly:crashreport:4.0.4')
    implementation("com.drakeet.about:about:2.5.1")
    implementation("com.drakeet.multitype:multitype:4.3.0")
    implementation("io.coil-kt:coil:2.1.0")
}

import java.text.SimpleDateFormat

private static String getBuildTime() {
    Date date = new Date()
    SimpleDateFormat formatter = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss")
    formatter.setTimeZone(TimeZone.getTimeZone("GMT+08:00"))
    return formatter.format(date)
}

private String getBuildType() {
    for (String s : gradle.startParameter.taskNames) {
        if (s.contains("Release") | s.contains("release")) {
            if ("pre" in android.defaultConfig.versionName | "Pre" in android.defaultConfig.versionName) {
                return "Pre-release"
            }
            return "Release"
        }
    }
    return "Debug"
}

private static String getBuildHost() {
    return InetAddress.getLocalHost().getHostName()
}

private static String getGitCommitHash() {
    Runtime runtime = Runtime.getRuntime()
    Process process = null
    try {
        process = runtime.exec("git rev-parse HEAD")
        String line = null
        BufferedReader input = new BufferedReader(new InputStreamReader(process.getInputStream()))
        while ((line = input.readLine()) != null) {
            if (process != null) {
                process.destroy()
            }
            return line
        }
    } catch (Exception e) {
        e.printStackTrace()
    } finally {
        if (process != null) {
            process.destroy()
        }
    }
}