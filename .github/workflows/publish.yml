name: Publish

on:
  push:
    paths-ignore:
      - '.idea/**'
      - '.gitattributes'
      - '.github/**.json'
      - '.gitignore'
      - '.gitmodules'
      - '**.md'
      - 'LICENSE'
      - 'NOTICE'
      - '.github/workflows/issue.yml'
      - '.github/workflows/tasks.yml'
      - '.github/workflows/code_quality.yml'
      - '.github/workflows/nightly-merge.yml'
  pull_request:
    paths-ignore:
      - '.idea/**'
      - '.gitattributes'
      - '.github/**.json'
      - '.gitignore'
      - '.gitmodules'
      - '**.md'
      - 'LICENSE'
      - 'NOTICE'
      - '.github/workflows/issue.yml'
      - '.github/workflows/tasks.yml'
      - '.github/workflows/code_quality.yml'
      - '.github/workflows/nightly-merge.yml'

jobs:
  check:
    name: Check
    if: ${{ !startsWith(github.event.head_commit.message, '[skip ci]') }}
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - name: Checkout
        uses: actions/checkout@v3.0.2
        with:
          fetch-depth: 0

      - name: Set up java
        uses: actions/setup-java@v3.4.1
        with:
          distribution: 'zulu'
          java-version: 17

      - name: Validate Gradle Wrapper
        uses: gradle/wrapper-validation-action@v1.0.4

      - name: Check_debug
        uses: gradle/gradle-build-action@v2.2.2
        with:
          arguments: lintAnalyzeDebug --warning-mode all --scan

      - name: Check_release
        uses: gradle/gradle-build-action@v2.2.2
        with:
          arguments: lintAnalyzeRelease --warning-mode all --scan

  build_debug:
    name: Build_Debug
    if: ${{ github.event_name == 'push' && !startsWith(github.ref, 'refs/tags/') && !startsWith(github.event.head_commit.message, '[skip ci]') }}
    needs: check
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3.0.2
        with:
          fetch-depth: 0

      - name: Set up java
        uses: actions/setup-java@v3.4.1
        with:
          distribution: 'zulu'
          java-version: 17

      - name: Build with Gradle
        uses: gradle/gradle-build-action@v2.2.2
        with:
          arguments: assembleDebug

      - name: Sign apk release
        id: signStep
        uses: r0adkll/sign-android-release@v1.0.4
        env:
          BUILD_TOOLS_VERSION: "32.0.0"
        with:
          releaseDirectory: app/build/outputs/apk/debug
          signingKeyBase64: ${{ secrets.SIGNING_KEY }}
          alias: ${{ secrets.ALIAS }}
          keyStorePassword: ${{ secrets.KEY_PASS }}
          keyPassword: ${{ secrets.KEY_PASS }}

      - name: Upload signed apk
        uses: actions/upload-artifact@v3.1.0
        with:
          name: signed_debug_apk
          path: ${{ steps.signStep.outputs.signedReleaseFile }}

  build_release:
    name: Build_Release
    if: ${{ github.event_name == 'push' && startsWith(github.ref, 'refs/tags/') && !startsWith(github.event.head_commit.message, '[skip ci]') }}
    needs: check
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3.0.2
        with:
          fetch-depth: 0

      - name: Set up java
        uses: actions/setup-java@v3.4.1
        with:
          distribution: 'zulu'
          java-version: 17

      - name: Build with Gradle
        uses: gradle/gradle-build-action@v2.2.2
        with:
          arguments: assembleRelease

      - name: Rename unsigned apk
        run: |
          sudo apt-get install rename -y
          rename 's/-unsigned.apk/.apk/' app/build/outputs/apk/release/*

      - name: Sign apk release
        id: signStep
        uses: r0adkll/sign-android-release@v1.0.4
        env:
          BUILD_TOOLS_VERSION: "32.0.0"
        with:
          releaseDirectory: app/build/outputs/apk/release
          signingKeyBase64: ${{ secrets.SIGNING_KEY }}
          alias: ${{ secrets.ALIAS }}
          keyStorePassword: ${{ secrets.KEY_PASS }}
          keyPassword: ${{ secrets.KEY_PASS }}

      - name: Upload signed apk
        uses: actions/upload-artifact@v3.1.0
        with:
          name: signed_release_apk
          path: ${{ steps.signStep.outputs.signedReleaseFile }}

  pre-release:
    name: Pre-release
    if: ${{ contains(github.ref, 'Pre') }}
    needs: build_release
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3.0.2
        with:
          fetch-depth: 0

      - name: Download signed release apk
        uses: actions/download-artifact@v3.0.0
        with:
          name: signed_release_apk
          path: upload

      - name: Rename pre-release apk
        run: |
          sudo apt-get install rename -y
          rename 's/-release-signed.apk/-Pre-release-signed.apk/' upload/*

      - name: Generate SHA-512 checksums
        shell: sh
        run: |
          set -eu
          (
            cd "upload"

            sha512sum *.apk > SHA512SUMS
          )

      - name: Upload SHA512SUMS
        continue-on-error: true
        uses: actions/upload-artifact@v3.1.0
        with:
          name: SHA512SUMS
          path: upload/SHA512SUMS

      - name: Generate release body
        continue-on-error: true
        uses: qhy040404/auto-generate-release-body@v1.1.0
        with:
          changelog: 'Changelog.md'
          template: '.github/RELEASE_TEMPLATE.md'
          tag: ${{ github.ref_name }}
          template-data: '* This is automated GitHub deployment, human-readable changelog should be available soon.'
          fore-delimiter: ${{ github.ref_name }}
          back-delimiter: 'v'

      - name: Create GitHub release
        id: github_release
        uses: actions/create-release@v1.1.4
        env:
          GITHUB_TOKEN: ${{ secrets.QHYBOT_RELEASE_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: v${{ github.ref }}
          body_path: .github/RELEASE_TEMPLATE.md
          prerelease: true

      - name: Upload apk to Github release
        uses: actions/upload-release-asset@v1.0.2
        env:
          GITHUB_TOKEN: ${{ secrets.QHYBOT_RELEASE_TOKEN }}
        with:
          upload_url: ${{ steps.github_release.outputs.upload_url }}
          asset_path: upload/Library-One-Tap_v${{ github.ref_name }}-release-signed.apk
          asset_name: Library-One-Tap_v${{ github.ref_name }}-release-signed.apk
          asset_content_type: application/vnd.android.package-archive

      - name: Upload SHA512SUMS to GitHub release
        uses: actions/upload-release-asset@v1.0.2
        env:
          GITHUB_TOKEN: ${{ secrets.QHYBOT_RELEASE_TOKEN }}
        with:
          upload_url: ${{ steps.github_release.outputs.upload_url }}
          asset_path: upload/SHA512SUMS
          asset_name: SHA512SUMS
          asset_content_type: text/plain

  release:
    name: Release
    if: ${{ !contains(github.ref, 'Pre') }}
    needs: build_release
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3.0.2
        with:
          fetch-depth: 0

      - name: Download signed release apk
        uses: actions/download-artifact@v3.0.0
        with:
          name: signed_release_apk
          path: upload

      - name: Generate SHA-512 checksums
        shell: sh
        run: |
          set -eu
          (
            cd "upload"

            sha512sum *.apk > SHA512SUMS
          )

      - name: Upload SHA512SUMS
        continue-on-error: true
        uses: actions/upload-artifact@v3.1.0
        with:
          name: SHA512SUMS
          path: upload/SHA512SUMS

      - name: Generate release body
        continue-on-error: true
        uses: qhy040404/auto-generate-release-body@v1.1.0
        with:
          changelog: 'Changelog.md'
          template: '.github/RELEASE_TEMPLATE.md'
          tag: ${{ github.ref_name }}
          template-data: '* This is automated GitHub deployment, human-readable changelog should be available soon.'
          fore-delimiter: ${{ github.ref_name }}
          back-delimiter: 'v'

      - name: Create Github release
        id: github_release
        uses: actions/create-release@v1.1.4
        env:
          GITHUB_TOKEN: ${{ secrets.QHYBOT_RELEASE_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: v${{ github.ref }}
          body_path: .github/RELEASE_TEMPLATE.md
          prerelease: false

      - name: Upload apk to Github release
        uses: actions/upload-release-asset@v1.0.2
        env:
          GITHUB_TOKEN: ${{ secrets.QHYBOT_RELEASE_TOKEN }}
        with:
          upload_url: ${{ steps.github_release.outputs.upload_url }}
          asset_path: upload/Library-One-Tap_v${{ github.ref_name }}-release-signed.apk
          asset_name: Library-One-Tap_v${{ github.ref_name }}-release-signed.apk
          asset_content_type: application/vnd.android.package-archive

      - name: Upload SHA512SUMS to GitHub release
        uses: actions/upload-release-asset@v1.0.2
        env:
          GITHUB_TOKEN: ${{ secrets.QHYBOT_RELEASE_TOKEN }}
        with:
          upload_url: ${{ steps.github_release.outputs.upload_url }}
          asset_path: upload/SHA512SUMS
          asset_name: SHA512SUMS
          asset_content_type: text/plain
